apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-ssh
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-ssh
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-ssh
    spec:
      containers:
      - name: ssh-server
        image: lscr.io/linuxserver/openssh-server:latest
        ports:
        - containerPort: 2222
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "Etc/UTC"
        - name: PUBLIC_KEY_FILE
          value: "/tmp/authorized_keys"
        - name: USER_NAME
          value: "ncote"
        - name: USER_PASSWORD_FILE
          value: "/dev/null"  # Disable password auth, keys only
        volumeMounts:
        - name: ssh-keys
          mountPath: /tmp/authorized_keys
          subPath: authorized_keys
          readOnly: true
        - name: config-volume
          mountPath: /config
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
      volumes:
      - name: ssh-keys
        secret:
          secretName: {{ .Values.app.name }}-ssh-key
          items:
          - key: ssh-key
            path: authorized_keys
            mode: 0644
      - name: config-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: false  # SSH server needs to run as root initially
        fsGroup: 1000